afzal@afzal-350V5C-351V5C-3540VC-3440VC:~/Documents/Study material/Msc CS/SMT/major_Project/sp_z3_new/src/check_wp$ /usr/bin/time -v ./check_wp ../../tests/if_unsat2.c 
file ../../tests/if_unsat2.c: Parsing
file <command-line> line 0: <command-line>:0:0: warning: "__STDC_VERSION__" redefined
file <command-line> line 0: <built-in>: note: this is the location of the previous definition
Converting
Type-checking if_unsat2
SP in assume is TRUE && x < 10 && y > 10
Equel exp is z == x
sp in one step is exists { irep("(\"bv\")") t5; z == x && x < 5 && x < 10 && y > 10 }
before else sp is !(x < 5) && x < 10 && y > 10
Equel exp is z == y
sp in one step is exists { irep("(\"bv\")") t7; z == y && !(x < 5) && x < 10 && y > 10 }
Equel exp is z == t8 + 1
sp in one step is exists { irep("(\"bv\")") t8; z == t8 + 1 && ((exists { irep("(\"bv\")") t5; x < 5 && x < 10 && t8 == x && y > 10 }) || (exists { irep("(\"bv\")") t7; x < 10 && t8 == y && y > 10 && !(x < 5) })) }
Strongest postcondition is exists { irep("(\"bv\")") t8; z == t8 + 1 && ((exists { irep("(\"bv\")") t5; x < 5 && x < 10 && t8 == x && y > 10 }) || (exists { irep("(\"bv\")") t7; x < 10 && t8 == y && y > 10 && !(x < 5) })) }
Assert is z < 6 || z > 11
Final sp is (exists { irep("(\"bv\")") t8; z == t8 + 1 && ((exists { irep("(\"bv\")") t5; x < 5 && x < 10 && t8 == x && y > 10 }) || (exists { irep("(\"bv\")") t7; x < 10 && t8 == y && y > 10 && !(x < 5) })) }) ==> z < 6 || z > 11

wp expression after cbmc phase: !((exists { irep("(\"bv\")") t8; z == t8 + 1 && ((exists { irep("(\"bv\")") t5; x < 5 && x < 10 && t8 == x && y > 10 }) || (exists { irep("(\"bv\")") t7; x < 10 && t8 == y && y > 10 && !(x < 5) })) }) ==> z < 6 || z > 11)
wp expression after converting to z3: (let ((a!1 (exists ((t8 (_ BitVec 32)))
             (let ((a!1 (exists ((t7 (_ BitVec 32)))
                          (and (bvslt x #x0000000a)
                               (= t8 y)
                               (bvsgt y #x0000000a)
                               (not (bvslt x #x00000005))))))
             (let ((a!2 (or (exists ((t5 (_ BitVec 32)))
                              (and (bvslt x #x00000005)
                                   (bvslt x #x0000000a)
                                   (= t8 x)
                                   (bvsgt y #x0000000a)))
                            a!1)))
               (and (= z (bvadd t8 #x00000001)) a!2))))))
  (not (=> a!1 (or (bvslt z #x00000006) (bvsgt z #x0000000b)))))
UNSAT core: (ast-vector
  ans_lit
  z4)
UNSAT core: (ast-vector
  ans_lit
  z8)
UNSAT core: (ast-vector
  ans_lit
  z16)
UNSAT core: (ast-vector
  ans_lit
  x4
  y4)
UNSAT core: (ast-vector
  ans_lit
  x8
  y8)
UNSAT core: (ast-vector
  ans_lit
  x16
  y16)
UNSAT core: (ast-vector
  ans_lit)
No assumptions were found. Program is safe.
VERIFICATION SUCCESSFUL
	Command being timed: "./check_wp ../../tests/if_unsat2.c"
	User time (seconds): 0.12
	System time (seconds): 0.02
	Percent of CPU this job got: 57%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.25
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 33196
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 3
	Minor (reclaiming a frame) page faults: 5397
	Voluntary context switches: 18
	Involuntary context switches: 5
	Swaps: 0
	File system inputs: 920
	File system outputs: 8
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
