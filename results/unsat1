afzal@afzal-350V5C-351V5C-3540VC-3440VC:~/Documents/Study material/Msc CS/SMT/major_Project/sp_z3_new/src/check_wp$ /usr/bin/time -v ./check_wp ../../tests/unsat1.c 
file ../../tests/unsat1.c: Parsing
file <command-line> line 0: <command-line>:0:0: warning: "__STDC_VERSION__" redefined
file <command-line> line 0: <built-in>: note: this is the location of the previous definition
Converting
Type-checking unsat1
SP in assume is TRUE && x < (unsigned int)10 && y < (unsigned int)10
Equel exp is x == t3 * y
sp in one step is exists { irep("(\"bv\")") t3; x == t3 * y && t3 < 10u && y < 10u }
Equel exp is y == t4 * x
sp in one step is exists { irep("(\"bv\")") t4; y == t4 * x && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && x == t3 * t4 }) }
Equel exp is x == t5 + y
sp in one step is exists { irep("(\"bv\")") t5; x == t5 + y && (exists { irep("(\"bv\")") t4; y == t4 * t5 && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && t5 == t3 * t4 }) }) }
Equel exp is y == (unsigned int)2 * x
sp in one step is exists { irep("(\"bv\")") t6; y == (unsigned int)2 * x && (exists { irep("(\"bv\")") t5; x == t5 + t6 && (exists { irep("(\"bv\")") t4; t6 == t4 * t5 && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && t5 == t3 * t4 }) }) }) }
Strongest postcondition is exists { irep("(\"bv\")") t6; y == 2u * x && (exists { irep("(\"bv\")") t5; x == t5 + t6 && (exists { irep("(\"bv\")") t4; t6 == t4 * t5 && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && t5 == t3 * t4 }) }) }) }
Assert is y < (unsigned int)2200
Final sp is (exists { irep("(\"bv\")") t6; y == 2u * x && (exists { irep("(\"bv\")") t5; x == t5 + t6 && (exists { irep("(\"bv\")") t4; t6 == t4 * t5 && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && t5 == t3 * t4 }) }) }) }) ==> y < (unsigned int)2200

wp expression after cbmc phase: !((exists { irep("(\"bv\")") t6; y == 2u * x && (exists { irep("(\"bv\")") t5; x == t5 + t6 && (exists { irep("(\"bv\")") t4; t6 == t4 * t5 && (exists { irep("(\"bv\")") t3; t3 < 10u && t4 < 10u && t5 == t3 * t4 }) }) }) }) ==> y < (unsigned int)2200)
wp expression after converting to z3: (let ((a!1 (exists ((t6 (_ BitVec 32)))
             (let ((a!1 (exists ((t5 (_ BitVec 32)))
                          (let ((a!1 (exists ((t4 (_ BitVec 32)))
                                       (let ((a!1 (exists ((t3 (_ BitVec 32)))
                                                    (and (bvult t3 #x0000000a)
                                                         (bvult t4 #x0000000a)
                                                         (= t5 (bvmul t3 t4))))))
                                         (and (= t6 (bvmul t4 t5)) a!1)))))
                            (and (= x (bvadd t5 t6)) a!1)))))
               (and (= y (bvmul #x00000002 x)) a!1)))))
  (not (=> a!1 (bvult y #x00000898))))
UNSAT core: (ast-vector
  ans_lit
  x4)
UNSAT core: (ast-vector
  ans_lit
  x8)
UNSAT core: (ast-vector
  ans_lit
  x16)
UNSAT core: (ast-vector
  ans_lit
  y4)
UNSAT core: (ast-vector
  ans_lit
  y8)
UNSAT core: (ast-vector
  ans_lit
  y16)
UNSAT core: (ast-vector
  ans_lit)
No assumptions were found. Program is safe.
VERIFICATION SUCCESSFUL
	Command being timed: "./check_wp ../../tests/unsat1.c"
	User time (seconds): 0.16
	System time (seconds): 0.02
	Percent of CPU this job got: 92%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.19
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 35420
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 6125
	Voluntary context switches: 10
	Involuntary context switches: 6
	Swaps: 0
	File system inputs: 0
	File system outputs: 8
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0